Temos de usar memoria dinâmica, excepto em situações em que o maximo do vetor já é determinado mas isso pode ser discutido.
Poderiamos usar a memoria denâmica com as provas por ex.

Secalhar podiamos fazer um ficheiro para cada grupo de funções que utiliza um certo struct.

Podiamos meter ascii art tmb só para dar flex

Deviamos ver a GUI de outros programas que utilizam o terminal para mostrar o programa, para tirar "inspiração"

criar os menus rapidamente para ter a noção do programa

criar a mecanica dos ficheiros para ser mais rapido tentar o programa pois não vai ser preciso estar sempre a introduzir dados.



Verificacoes feitas:

Perguntas:
  Nao existem questoes iguais
  Nao existem opcoes iguais
  Existe espaco para mais uma Pergunta
  Existe espaco para mais uma pergunta na prova (n maximo e 10 porque nos treinos diz maximo 10 respostas)


Boas praticas e verificacoes a fazer ao codigo:
  Todos os switch's tem um default
  Os dados apenas sao guardados se as verificacoes passarem (nao guardar logo)
  Verificar que todos os errors acontecem

Podemos adicionar na função consultarEstudante() um argumento para dizer se a função tem numerização ou n, podendo ter numeração numerica, alfabetica e se aptecer romana, para n estar a repetir codigo no alterarEstudante().

Isso ou criar uma função em que damos um vetor de strings e ele dá print a cada linha do vetor com numeração
